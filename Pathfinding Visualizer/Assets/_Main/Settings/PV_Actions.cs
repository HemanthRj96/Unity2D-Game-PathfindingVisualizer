//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/_Main/Settings/PV_Actions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PV_Actions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PV_Actions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PV_Actions"",
    ""maps"": [
        {
            ""name"": ""Interaction"",
            ""id"": ""0e523c9b-f59a-4bf9-aab2-4e4803afc6f2"",
            ""actions"": [
                {
                    ""name"": ""Set Point"",
                    ""type"": ""Button"",
                    ""id"": ""1f36d63a-6bcd-4fea-998d-48084b9cfb55"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reset Point"",
                    ""type"": ""Button"",
                    ""id"": ""e6472f84-2cae-417a-8227-3bc01030b119"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SSR Pathfinding"",
                    ""type"": ""Button"",
                    ""id"": ""04ee763f-e0c4-4ad9-9861-c97f8ca1c4ab"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Scroll Wheel"",
                    ""type"": ""Value"",
                    ""id"": ""45fd7058-bc2a-4bd3-8cba-6accee583654"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": ""Clamp(min=-1,max=1)"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""41569aaa-bd36-4fd6-8a36-a04bf9e460b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""End"",
                    ""type"": ""Button"",
                    ""id"": ""afcf669f-6519-4785-ae81-e5bfed9c40d0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Wall"",
                    ""type"": ""Button"",
                    ""id"": ""886ac70e-9074-4ac7-82fb-4925eabb1ff2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Weight"",
                    ""type"": ""Button"",
                    ""id"": ""2e306eab-b78a-4996-8ba5-42260a78266d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Clear Path"",
                    ""type"": ""Button"",
                    ""id"": ""9d6cf962-5482-47c5-9950-03b83cd9bf02"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Clear Wall"",
                    ""type"": ""Button"",
                    ""id"": ""37f7b7ed-4872-42b6-a3f3-f1d76adbe66e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Clear Weight"",
                    ""type"": ""Button"",
                    ""id"": ""8885c8d0-3b9e-4e73-944d-d2d32c0442b6"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Clear Grid"",
                    ""type"": ""Button"",
                    ""id"": ""ebd39e27-0413-4c6c-a68a-d857444c4336"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""955f260a-d82e-4867-802b-29b66c2de3f0"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and mouse"",
                    ""action"": ""Set Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""107bab1f-a619-4453-a582-ca7454a7fbb4"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and mouse"",
                    ""action"": ""Reset Point"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7583c1c5-ae2e-49b0-9767-7fb60cd88c42"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and mouse"",
                    ""action"": ""SSR Pathfinding"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""cb12cc08-e1da-4f73-b86c-89a85c5c2dc5"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Scroll Wheel"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""83d22edd-37c5-41df-b64e-21fa9da04c35"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and mouse"",
                    ""action"": ""Scroll Wheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""82bb8d0d-d8e6-466d-bcdc-11a36f563924"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and mouse"",
                    ""action"": ""Scroll Wheel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""515e1ef9-b5a7-4a36-bb61-028858de2d72"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and mouse"",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""128554bf-c951-4f7c-91f1-be1c08856fb2"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and mouse"",
                    ""action"": ""End"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""81626d5f-a585-41bd-9c03-9993a431bfe1"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and mouse"",
                    ""action"": ""Wall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""db658f22-276f-4f94-a512-afe5999fc29e"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and mouse"",
                    ""action"": ""Weight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b6dcc37-4248-40dd-be78-133c3e42bcc1"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and mouse"",
                    ""action"": ""Clear Path"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""291fecfa-163f-4953-a0e3-c1182463191f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Clear Wall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5c02f12-fd37-4727-90b0-3c9ee066b437"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Clear Weight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00a6e87c-cac3-488f-a26a-d089abb359cc"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Clear Grid"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Menu"",
            ""id"": ""be2d9cfa-a6cb-40bd-87f1-3994184f6744"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""d5580957-c2cd-4e3a-bbf9-62dafe9cd89c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d0100c8e-4986-4d54-8f42-c02395cd4ffa"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard and mouse"",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard and mouse"",
            ""bindingGroup"": ""Keyboard and mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Interaction
        m_Interaction = asset.FindActionMap("Interaction", throwIfNotFound: true);
        m_Interaction_SetPoint = m_Interaction.FindAction("Set Point", throwIfNotFound: true);
        m_Interaction_ResetPoint = m_Interaction.FindAction("Reset Point", throwIfNotFound: true);
        m_Interaction_SSRPathfinding = m_Interaction.FindAction("SSR Pathfinding", throwIfNotFound: true);
        m_Interaction_ScrollWheel = m_Interaction.FindAction("Scroll Wheel", throwIfNotFound: true);
        m_Interaction_Start = m_Interaction.FindAction("Start", throwIfNotFound: true);
        m_Interaction_End = m_Interaction.FindAction("End", throwIfNotFound: true);
        m_Interaction_Wall = m_Interaction.FindAction("Wall", throwIfNotFound: true);
        m_Interaction_Weight = m_Interaction.FindAction("Weight", throwIfNotFound: true);
        m_Interaction_ClearPath = m_Interaction.FindAction("Clear Path", throwIfNotFound: true);
        m_Interaction_ClearWall = m_Interaction.FindAction("Clear Wall", throwIfNotFound: true);
        m_Interaction_ClearWeight = m_Interaction.FindAction("Clear Weight", throwIfNotFound: true);
        m_Interaction_ClearGrid = m_Interaction.FindAction("Clear Grid", throwIfNotFound: true);
        // Menu
        m_Menu = asset.FindActionMap("Menu", throwIfNotFound: true);
        m_Menu_Newaction = m_Menu.FindAction("New action", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Interaction
    private readonly InputActionMap m_Interaction;
    private IInteractionActions m_InteractionActionsCallbackInterface;
    private readonly InputAction m_Interaction_SetPoint;
    private readonly InputAction m_Interaction_ResetPoint;
    private readonly InputAction m_Interaction_SSRPathfinding;
    private readonly InputAction m_Interaction_ScrollWheel;
    private readonly InputAction m_Interaction_Start;
    private readonly InputAction m_Interaction_End;
    private readonly InputAction m_Interaction_Wall;
    private readonly InputAction m_Interaction_Weight;
    private readonly InputAction m_Interaction_ClearPath;
    private readonly InputAction m_Interaction_ClearWall;
    private readonly InputAction m_Interaction_ClearWeight;
    private readonly InputAction m_Interaction_ClearGrid;
    public struct InteractionActions
    {
        private @PV_Actions m_Wrapper;
        public InteractionActions(@PV_Actions wrapper) { m_Wrapper = wrapper; }
        public InputAction @SetPoint => m_Wrapper.m_Interaction_SetPoint;
        public InputAction @ResetPoint => m_Wrapper.m_Interaction_ResetPoint;
        public InputAction @SSRPathfinding => m_Wrapper.m_Interaction_SSRPathfinding;
        public InputAction @ScrollWheel => m_Wrapper.m_Interaction_ScrollWheel;
        public InputAction @Start => m_Wrapper.m_Interaction_Start;
        public InputAction @End => m_Wrapper.m_Interaction_End;
        public InputAction @Wall => m_Wrapper.m_Interaction_Wall;
        public InputAction @Weight => m_Wrapper.m_Interaction_Weight;
        public InputAction @ClearPath => m_Wrapper.m_Interaction_ClearPath;
        public InputAction @ClearWall => m_Wrapper.m_Interaction_ClearWall;
        public InputAction @ClearWeight => m_Wrapper.m_Interaction_ClearWeight;
        public InputAction @ClearGrid => m_Wrapper.m_Interaction_ClearGrid;
        public InputActionMap Get() { return m_Wrapper.m_Interaction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(InteractionActions set) { return set.Get(); }
        public void SetCallbacks(IInteractionActions instance)
        {
            if (m_Wrapper.m_InteractionActionsCallbackInterface != null)
            {
                @SetPoint.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnSetPoint;
                @SetPoint.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnSetPoint;
                @SetPoint.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnSetPoint;
                @ResetPoint.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnResetPoint;
                @ResetPoint.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnResetPoint;
                @ResetPoint.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnResetPoint;
                @SSRPathfinding.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnSSRPathfinding;
                @SSRPathfinding.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnSSRPathfinding;
                @SSRPathfinding.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnSSRPathfinding;
                @ScrollWheel.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnScrollWheel;
                @ScrollWheel.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnScrollWheel;
                @Start.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnStart;
                @Start.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnStart;
                @Start.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnStart;
                @End.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnEnd;
                @End.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnEnd;
                @End.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnEnd;
                @Wall.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnWall;
                @Wall.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnWall;
                @Wall.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnWall;
                @Weight.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnWeight;
                @Weight.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnWeight;
                @Weight.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnWeight;
                @ClearPath.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnClearPath;
                @ClearPath.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnClearPath;
                @ClearPath.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnClearPath;
                @ClearWall.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnClearWall;
                @ClearWall.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnClearWall;
                @ClearWall.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnClearWall;
                @ClearWeight.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnClearWeight;
                @ClearWeight.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnClearWeight;
                @ClearWeight.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnClearWeight;
                @ClearGrid.started -= m_Wrapper.m_InteractionActionsCallbackInterface.OnClearGrid;
                @ClearGrid.performed -= m_Wrapper.m_InteractionActionsCallbackInterface.OnClearGrid;
                @ClearGrid.canceled -= m_Wrapper.m_InteractionActionsCallbackInterface.OnClearGrid;
            }
            m_Wrapper.m_InteractionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SetPoint.started += instance.OnSetPoint;
                @SetPoint.performed += instance.OnSetPoint;
                @SetPoint.canceled += instance.OnSetPoint;
                @ResetPoint.started += instance.OnResetPoint;
                @ResetPoint.performed += instance.OnResetPoint;
                @ResetPoint.canceled += instance.OnResetPoint;
                @SSRPathfinding.started += instance.OnSSRPathfinding;
                @SSRPathfinding.performed += instance.OnSSRPathfinding;
                @SSRPathfinding.canceled += instance.OnSSRPathfinding;
                @ScrollWheel.started += instance.OnScrollWheel;
                @ScrollWheel.performed += instance.OnScrollWheel;
                @ScrollWheel.canceled += instance.OnScrollWheel;
                @Start.started += instance.OnStart;
                @Start.performed += instance.OnStart;
                @Start.canceled += instance.OnStart;
                @End.started += instance.OnEnd;
                @End.performed += instance.OnEnd;
                @End.canceled += instance.OnEnd;
                @Wall.started += instance.OnWall;
                @Wall.performed += instance.OnWall;
                @Wall.canceled += instance.OnWall;
                @Weight.started += instance.OnWeight;
                @Weight.performed += instance.OnWeight;
                @Weight.canceled += instance.OnWeight;
                @ClearPath.started += instance.OnClearPath;
                @ClearPath.performed += instance.OnClearPath;
                @ClearPath.canceled += instance.OnClearPath;
                @ClearWall.started += instance.OnClearWall;
                @ClearWall.performed += instance.OnClearWall;
                @ClearWall.canceled += instance.OnClearWall;
                @ClearWeight.started += instance.OnClearWeight;
                @ClearWeight.performed += instance.OnClearWeight;
                @ClearWeight.canceled += instance.OnClearWeight;
                @ClearGrid.started += instance.OnClearGrid;
                @ClearGrid.performed += instance.OnClearGrid;
                @ClearGrid.canceled += instance.OnClearGrid;
            }
        }
    }
    public InteractionActions @Interaction => new InteractionActions(this);

    // Menu
    private readonly InputActionMap m_Menu;
    private IMenuActions m_MenuActionsCallbackInterface;
    private readonly InputAction m_Menu_Newaction;
    public struct MenuActions
    {
        private @PV_Actions m_Wrapper;
        public MenuActions(@PV_Actions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_Menu_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_Menu; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MenuActions set) { return set.Get(); }
        public void SetCallbacks(IMenuActions instance)
        {
            if (m_Wrapper.m_MenuActionsCallbackInterface != null)
            {
                @Newaction.started -= m_Wrapper.m_MenuActionsCallbackInterface.OnNewaction;
                @Newaction.performed -= m_Wrapper.m_MenuActionsCallbackInterface.OnNewaction;
                @Newaction.canceled -= m_Wrapper.m_MenuActionsCallbackInterface.OnNewaction;
            }
            m_Wrapper.m_MenuActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }
        }
    }
    public MenuActions @Menu => new MenuActions(this);
    private int m_KeyboardandmouseSchemeIndex = -1;
    public InputControlScheme KeyboardandmouseScheme
    {
        get
        {
            if (m_KeyboardandmouseSchemeIndex == -1) m_KeyboardandmouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard and mouse");
            return asset.controlSchemes[m_KeyboardandmouseSchemeIndex];
        }
    }
    public interface IInteractionActions
    {
        void OnSetPoint(InputAction.CallbackContext context);
        void OnResetPoint(InputAction.CallbackContext context);
        void OnSSRPathfinding(InputAction.CallbackContext context);
        void OnScrollWheel(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
        void OnEnd(InputAction.CallbackContext context);
        void OnWall(InputAction.CallbackContext context);
        void OnWeight(InputAction.CallbackContext context);
        void OnClearPath(InputAction.CallbackContext context);
        void OnClearWall(InputAction.CallbackContext context);
        void OnClearWeight(InputAction.CallbackContext context);
        void OnClearGrid(InputAction.CallbackContext context);
    }
    public interface IMenuActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
